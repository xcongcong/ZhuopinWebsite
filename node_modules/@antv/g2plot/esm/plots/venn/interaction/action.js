import { __extends } from "tslib";
import { InteractionAction } from '@antv/g2';
var VennElementState = /** @class */ (function (_super) {
    __extends(VennElementState, _super);
    function VennElementState() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /** tofront: 同步所有元素的位置  */
    VennElementState.prototype.syncElementsPos = function () {
        var elements = this.context.view.geometries[0].elements;
        elements.forEach(function (elem) {
            elem.shape.toFront();
        });
    };
    return VennElementState;
}(InteractionAction));
var VennElementActive = /** @class */ (function (_super) {
    __extends(VennElementActive, _super);
    function VennElementActive() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /** hover */
    VennElementActive.prototype.active = function () {
        var data = this.context.event.data.data;
        var elements = this.context.view.geometries[0].elements;
        elements.forEach(function (elem) {
            var activeState = data === elem.getData();
            elem.setState('active', activeState);
        });
        // tofront: 同步所有元素的位置
        this.syncElementsPos();
    };
    /** 重置 */
    VennElementActive.prototype.reset = function () {
        var elements = this.context.view.geometries[0].elements;
        elements.forEach(function (elem) {
            // 所有元素的 state 统一 false
            elem.setState('active', false);
        });
        // tofront: 同步所有元素的位置
        this.syncElementsPos();
    };
    return VennElementActive;
}(VennElementState));
export { VennElementActive };
var VennElementSelected = /** @class */ (function (_super) {
    __extends(VennElementSelected, _super);
    function VennElementSelected() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /** 切换 */
    VennElementSelected.prototype.toggle = function () {
        var data = this.context.event.data.data;
        var elements = this.context.view.geometries[0].elements;
        elements.forEach(function (elem) {
            if (data === elem.getData()) {
                var selectedState = elem.getStates().includes('selected');
                elem.setState('selected', !selectedState);
            }
        });
        // tofront: 同步所有元素的位置
        this.syncElementsPos();
    };
    /** 重置 */
    VennElementSelected.prototype.reset = function () {
        var elements = this.context.view.geometries[0].elements;
        elements.forEach(function (elem) {
            // 所有元素的 state 统一 false
            elem.setState('selected', false);
        });
        // tofront: 同步所有元素的位置
        this.syncElementsPos();
    };
    return VennElementSelected;
}(VennElementState));
export { VennElementSelected };
//# sourceMappingURL=action.js.map