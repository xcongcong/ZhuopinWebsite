{"ast":null,"code":"import \"antd/es/card/style/css\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/table/style/css\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/message/style/css\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/select/style/css\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"D:\\\\\\u524D\\u7AEF\\u9879\\u76EE\\\\\\u5C1A\\u9633\\u4E92\\u52A8\\u5B98\\u7F51\\\\official-website\\\\src\\\\components\\\\pages\\\\product\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport LinkButton from '../../Link-Button';\nimport { reqProducts, reqSearchProducts } from '../../../api';\nimport { PAGE_SIZE } from '../../../utils/constants';\nimport { reqUpdateStatus } from '../../../api'; //商品上架下架\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Option = _Select.Option;\nexport default class Product extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      total: 0,\n      //商品总数量\n      products: [],\n      //商品的数组\n      loading: false,\n      searchName: '',\n      // 按关键字搜索\n      searchType: 'productName' //根据什么类型搜索\n      // Status:'1', //默认商品是上架状态，2是下架状态\n\n    };\n\n    this.initColumns = () => {\n      //初始化Table列的数组\n      this.columns = [{\n        title: '商品名称',\n        dataIndex: 'name'\n      }, {\n        title: '商品描述',\n        dataIndex: 'desc'\n      }, {\n        title: '价格',\n        dataIndex: 'price',\n        render: price => //加人名币符号\n        '¥' + price\n      }, {\n        title: '状态',\n        width: 100,\n        // dataIndex: 'status',\n        render: product => {\n          //加人名币符号 相当于after ：：before作用\n          const {\n            status,\n            _id\n          } = product;\n          console.log(status, _id);\n          const newStatus = status === 1 ? 2 : 1;\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(_Button, {\n              type: \"primary\",\n              onClick: () => {\n                this.upDateStatus(_id, newStatus);\n              },\n              children: status === 1 ? '下架' : '上架'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: status === 1 ? '在售' : '已下架'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this);\n        }\n      }, {\n        title: '操作',\n        render: product => {\n          //加人名币符号 相当于after ：：before作用\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(LinkButton, {\n              onClick: () => {\n                this.props.history.push('/admin/detail', {\n                  product\n                });\n              },\n              children: \"\\u8BE6\\u60C5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(LinkButton, {\n              children: \"\\u4FEE\\u6539\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this);\n        }\n      }];\n    };\n\n    this.getProducts = async pageNum => {\n      //请求指定分页\n      this.pageNum = pageNum; //存储pageNum 当前页码，让其他方法能看见\n\n      this.setState({\n        loading: true\n      });\n      const {\n        searchName,\n        searchType\n      } = this.state; //如果搜索关键字有值，说明要做搜索分页\n\n      let result;\n\n      if (searchName) {\n        result = await reqSearchProducts({\n          pageNum,\n          pageSize: PAGE_SIZE,\n          searchName,\n          searchType\n        });\n      } else {\n        //一般请求\n        result = await reqProducts(pageNum, PAGE_SIZE); //后台分页请求\n      }\n\n      this.setState({\n        loading: false\n      }); //隐藏loading\n\n      if (result.data.status === 0) {\n        //请求成功\n        //取出分页数据，跟新状态\n        const {\n          total,\n          list\n        } = result.data.data;\n        this.setState({\n          total,\n          products: list\n        });\n      }\n    };\n\n    this.upDateStatus = async (productId, status) => {\n      // 点击下架按钮触发的事件回调\n      const result = await reqUpdateStatus(productId, status);\n      console.log(result);\n\n      if (result.data.status === 0) {\n        _message.success('下架成功');\n\n        this.getProducts(this.pageNum);\n      }\n    };\n  }\n\n  componentWillMount() {\n    this.initColumns();\n  }\n\n  componentDidMount() {\n    this.getProducts(1); //默认展示第一页\n  }\n\n  render() {\n    const {\n      products,\n      total,\n      loading,\n      searchType,\n      searchName\n    } = this.state;\n\n    const title = /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(_Select, {\n        value: searchType,\n        style: {\n          width: 150\n        },\n        onChange: value => this.setState({\n          searchType: value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(Option, {\n          value: \"productName\",\n          children: \"\\u6309\\u540D\\u79F0\\u641C\\u7D22\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"productDesc\",\n          children: \"\\u6309\\u63CF\\u8FF0\\u641C\\u7D22\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(_Input, {\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u5173\\u952E\\u5B57\",\n        style: {\n          width: 150\n        },\n        value: searchName,\n        onChange: event => this.setState({\n          searchName: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_Button, {\n        type: \"primary\",\n        onClick: () => {\n          this.getProducts(1);\n        },\n        children: \"\\u641C\\u7D22\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this);\n\n    const extra = /*#__PURE__*/_jsxDEV(_Button, {\n      type: \"primary\",\n      onClick: this.props.history.push('/admin/product/addupdata'),\n      children: \"\\u6DFB\\u52A0\\u5546\\u54C1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(_Card, {\n      title: title,\n      extra: extra,\n      children: /*#__PURE__*/_jsxDEV(_Table, {\n        loading: loading,\n        rowKey: \"_id\",\n        bordered: true,\n        dataSource: products,\n        columns: this.columns //展示的数据\n        ,\n        pagination: {\n          onChange: pageNum => {\n            this.getProducts(pageNum);\n          },\n          total,\n          defaultPageSize: PAGE_SIZE,\n          showQuickJumper: true\n        } //分页器\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/前端项目/尚阳互动官网/official-website/src/components/pages/product/index.jsx"],"names":["React","Component","LinkButton","reqProducts","reqSearchProducts","PAGE_SIZE","reqUpdateStatus","Option","Product","state","total","products","loading","searchName","searchType","initColumns","columns","title","dataIndex","render","price","width","product","status","_id","console","log","newStatus","upDateStatus","props","history","push","getProducts","pageNum","setState","result","pageSize","data","list","productId","success","componentWillMount","componentDidMount","value","event","target","extra","onChange","defaultPageSize","showQuickJumper"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {Card,Select,Input,Button,Table,message} from 'antd'\r\nimport LinkButton from '../../Link-Button'\r\nimport {reqProducts, reqSearchProducts} from '../../../api'\r\nimport {PAGE_SIZE} from '../../../utils/constants'\r\nimport {reqUpdateStatus} from '../../../api'  //商品上架下架\r\nconst Option =Select.Option\r\nexport default class Product extends Component {\r\n    state={\r\n        total:0,//商品总数量\r\n        products:[],//商品的数组\r\n        loading:false,\r\n        searchName:'',// 按关键字搜索\r\n        searchType:'productName',//根据什么类型搜索\r\n        // Status:'1', //默认商品是上架状态，2是下架状态\r\n    }\r\n\r\n\r\n\r\n    initColumns=()=>{//初始化Table列的数组\r\n        this.columns = [\r\n            {\r\n                title: '商品名称',\r\n                dataIndex: 'name',\r\n            },\r\n            {\r\n                title: '商品描述',\r\n                dataIndex: 'desc',\r\n            },\r\n            {\r\n                title: '价格',\r\n                dataIndex: 'price',\r\n                render:(price)=> //加人名币符号\r\n                    '¥'+price\r\n            },\r\n            {\r\n                title: '状态',\r\n                width:100,\r\n                // dataIndex: 'status',\r\n                render:(product)=>{//加人名币符号 相当于after ：：before作用\r\n                    const {status,_id} = product\r\n                    console.log(status,_id)\r\n                    const newStatus = status === 1?2:1\r\n                    return(\r\n                        <span>\r\n                            <Button type='primary' onClick={()=>{this.upDateStatus(_id,newStatus)}}>{status===1?'下架':'上架'}</Button>\r\n                            {/* 当前商品的状态↓ */}\r\n                            <span>{status===1?'在售':'已下架'}</span>  \r\n                        </span>\r\n                    )\r\n                \r\n                } \r\n            },\r\n            {\r\n                title: '操作',\r\n                render:(product)=>{//加人名币符号 相当于after ：：before作用\r\n                    return(\r\n                        <span>\r\n                            {/* 将product传递给目标路由组件--------------------------------------第二个参数 */}\r\n                            <LinkButton onClick={()=>{this.props.history.push('/admin/detail',{product})}}>详情</LinkButton>&nbsp;\r\n                            \r\n                            <LinkButton>修改</LinkButton>\r\n                        </span>\r\n                    )\r\n                \r\n                } \r\n            },\r\n            \r\n        ];\r\n    }\r\n\r\n    getProducts=async(pageNum)=>{//请求指定分页\r\n        this.pageNum=pageNum; //存储pageNum 当前页码，让其他方法能看见\r\n        this.setState({loading:true});\r\n        const {searchName,searchType} =this.state\r\n        //如果搜索关键字有值，说明要做搜索分页\r\n        let result\r\n        if(searchName){\r\n            result=await reqSearchProducts({pageNum,pageSize:PAGE_SIZE,searchName,searchType})\r\n        }else{//一般请求\r\n            result=await reqProducts(pageNum,PAGE_SIZE) //后台分页请求\r\n        }\r\n        this.setState({loading:false});//隐藏loading\r\n\r\n        if(result.data.status===0){//请求成功\r\n            //取出分页数据，跟新状态\r\n            const {total,list}=result.data.data\r\n            this.setState({\r\n                total,\r\n                products:list\r\n            })\r\n        }\r\n    }\r\n\r\n    upDateStatus = async(productId,status)=>{ // 点击下架按钮触发的事件回调\r\n        const result =await reqUpdateStatus(productId,status)\r\n        console.log(result)\r\n        if(result.data.status===0){\r\n            message.success('下架成功')\r\n            this.getProducts(this.pageNum)\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.initColumns()\r\n    }\r\n    componentDidMount(){\r\n        this.getProducts(1) //默认展示第一页\r\n    }\r\n    render() {\r\n        const {products,total,loading,searchType,searchName} = this.state\r\n\r\n        const title=(\r\n            <span>\r\n                <Select value={searchType} style={{width:150}} onChange={value=>this.setState({searchType:value})}> \r\n                    <Option value='productName'>按名称搜索</Option>\r\n                    <Option value='productDesc'>按描述搜索</Option>\r\n                </Select>&nbsp;&nbsp;\r\n                <Input \r\n                    placeholder=\"请输入关键字\" \r\n                    style={{width:150}} \r\n                    value={searchName}\r\n                    onChange={event=>this.setState({searchName:event.target.value})}\r\n                    />\r\n                <Button type='primary' onClick={()=>{this.getProducts(1)}}>搜索</Button>\r\n            </span>\r\n        )\r\n        const extra=(\r\n            <Button type='primary' onClick={this.props.history.push('/admin/product/addupdata')}>\r\n                添加商品\r\n            </Button>\r\n        )\r\n        return (\r\n            <Card title={title} extra={extra}>\r\n                <Table\r\n                loading={loading}\r\n                rowKey='_id'\r\n                bordered\r\n                dataSource={products} columns={this.columns} //展示的数据\r\n                pagination={{\r\n                    \r\n                    \r\n                    onChange:(pageNum)=>{this.getProducts(pageNum)},\r\n                    total,defaultPageSize:PAGE_SIZE,showQuickJumper:true}}  //分页器\r\n                />\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}