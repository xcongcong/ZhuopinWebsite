{"ast":null,"code":"import \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/message/style/css\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"D:\\\\\\u524D\\u7AEF\\u9879\\u76EE\\\\\\u5C1A\\u9633\\u4E92\\u52A8\\u5B98\\u7F51\\\\official-website\\\\src\\\\components\\\\login\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport './index.css';\nimport close from './images/guanbi.png';\nimport memoryUtils from '../../utils/memoryUtils';\nimport PubSub from 'pubsub-js'; //引入发布消息\n\nimport { reqLogin } from '../../api/index'; //请求登陆的promise函数\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Login extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data: ''\n    };\n\n    this.CloseLogin = () => {\n      // alert('关闭')\n      PubSub.publish('Close-login', false); //发布消息\n    };\n\n    this.onFinish = values => {\n      //表单验证成功的回调\n      const {\n        username,\n        password\n      } = values; // console.log(username,password)\n\n      if (values) {\n        //不写判断不能.then\n        reqLogin(username, password).then(response => {\n          const result = response.data.status;\n\n          if (result === 0) {\n            //密码正确跳转后台\n            const user = response.data.data;\n            memoryUtils.user = user; //保存到内存中\n\n            _message.success('登陆成功');\n\n            console.log('用户信息', memoryUtils.user);\n            this.state.data.history.replace('/admin');\n          } else {\n            _message.error('用户名或密码错误');\n          }\n        });\n      } // message.success('登陆成功')\n      // //replace跳转到页面\n      // \n\n    };\n\n    this.onFinishFailed = errorInfo => {\n      console.log(errorInfo);\n\n      _message.error('登陆出错,请重试');\n    };\n  }\n\n  componentDidMount() {\n    PubSub.subscribe('tiaozhuan', (msg, data) => {\n      this.setState({\n        data\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-bg\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: close,\n            alt: \"guanbi\",\n            onClick: this.CloseLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\u7528\\u6237\\u767B\\u9646\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(_Form, {\n            // layout='inline'\n            labelAlign: \"left\",\n            name: \"basic\",\n            labelCol: {\n              span: 7\n            },\n            wrapperCol: {\n              span: 20\n            },\n            initialValues: {\n              remember: true\n            },\n            onFinish: this.onFinish,\n            onFinishFailed: this.onFinishFailed,\n            autoComplete: \"off\",\n            children: [/*#__PURE__*/_jsxDEV(_Form.Item, {\n              label: \"\\u8D26\\u6237\",\n              name: \"username\",\n              rules: [{\n                required: true,\n                message: '用户名不能为空!'\n              }, {\n                min: 4,\n                message: '用户名不低于四位'\n              }, {\n                max: 12,\n                message: '用户名最长不高于十二位'\n              }, {\n                pattern: /^[a-zA-Z0-9_]+$/,\n                message: '用户名必须是英文、数字或下划线组成'\n              }],\n              children: /*#__PURE__*/_jsxDEV(_Input, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n              label: \"\\u5BC6\\u7801\",\n              name: \"password\",\n              rules: [{\n                required: true,\n                message: '密码不能为空！'\n              }, {\n                min: 4,\n                message: '密码不低于四位'\n              }, {\n                max: 12,\n                message: '密码最长不高于十二位'\n              }, {\n                pattern: /^[a-zA-Z0-9_]+$/,\n                message: '密码必须是英文、数字或下划线组成'\n              }],\n              children: /*#__PURE__*/_jsxDEV(_Input.Password, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n              wrapperCol: {\n                offset: 10,\n                span: 16\n              },\n              children: /*#__PURE__*/_jsxDEV(_Button, {\n                type: \"primary\",\n                htmlType: \"submit\",\n                className: \"login-form-button\",\n                children: \"\\u767B\\u9646\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/前端项目/尚阳互动官网/official-website/src/components/login/index.jsx"],"names":["React","Component","close","memoryUtils","PubSub","reqLogin","Login","state","data","CloseLogin","publish","onFinish","values","username","password","then","response","result","status","user","success","console","log","history","replace","error","onFinishFailed","errorInfo","componentDidMount","subscribe","msg","setState","render","span","remember","required","message","min","max","pattern","offset"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Form, Input, Button,message } from 'antd';\r\nimport './index.css'\r\nimport close from './images/guanbi.png'\r\nimport memoryUtils from '../../utils/memoryUtils'\r\n\r\nimport PubSub from 'pubsub-js' //引入发布消息\r\n\r\nimport {reqLogin} from '../../api/index' //请求登陆的promise函数\r\n\r\nexport default class Login extends Component {\r\n            state = {\r\n                data:'',\r\n            }\r\n            componentDidMount(){\r\n                PubSub.subscribe('tiaozhuan',(msg,data)=>{\r\n                        this.setState({data})\r\n                        \r\n                })\r\n            }\r\n\r\n            CloseLogin=()=>{\r\n                // alert('关闭')\r\n                PubSub.publish('Close-login',false);  //发布消息\r\n            }\r\n            //---------------------------------------------------------------------------\r\n            onFinish = (values) => {   //表单验证成功的回调\r\n                const {username,password} = values;\r\n                // console.log(username,password)\r\n                if(values){  //不写判断不能.then\r\n                    reqLogin(username,password).then(response=>{\r\n                        const result =response.data.status\r\n                        if(result===0){//密码正确跳转后台\r\n                            const user =response.data.data\r\n                            memoryUtils.user = user;//保存到内存中\r\n                            message.success('登陆成功')\r\n                            console.log('用户信息',memoryUtils.user)\r\n                            this.state.data.history.replace('/admin')\r\n                        }else{\r\n                            message.error('用户名或密码错误')\r\n                        }\r\n                    })\r\n                }\r\n                \r\n                // message.success('登陆成功')\r\n                // //replace跳转到页面\r\n                // \r\n            };\r\n\r\n            onFinishFailed = (errorInfo) => {\r\n                console.log(errorInfo)\r\n                message.error('登陆出错,请重试')\r\n            };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login\">\r\n                <div className=\"login-bg\">\r\n                <div className=\"login-content\">\r\n                    <img src={close} alt=\"guanbi\" onClick={this.CloseLogin}/>\r\n                    <h2>用户登陆</h2>\r\n                    <Form\r\n                        // layout='inline'\r\n                        labelAlign='left'\r\n                        name=\"basic\"\r\n                        labelCol={{\r\n                            span: 7,\r\n                        }}\r\n                        wrapperCol={{\r\n                            span: 20,\r\n                        }}\r\n                        initialValues={{\r\n                            remember: true,\r\n                        }}\r\n                        onFinish={this.onFinish}\r\n                        onFinishFailed={this.onFinishFailed}\r\n                        autoComplete=\"off\"\r\n                        >\r\n                            <Form.Item\r\n                                label=\"账户\"\r\n                                name=\"username\"\r\n                                rules={[\r\n                                {required: true,message: '用户名不能为空!',},\r\n                                {min: 4,message: '用户名不低于四位',},\r\n                                {max: 12,message: '用户名最长不高于十二位',},\r\n                                {pattern:/^[a-zA-Z0-9_]+$/,message: '用户名必须是英文、数字或下划线组成',},\r\n                                ]}\r\n                            >\r\n                                {/* 高阶函数第二次调用传入的 input↓ */}\r\n                                <Input />  \r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                label=\"密码\"\r\n                                name=\"password\"\r\n                                rules={[\r\n                                {required: true,message: '密码不能为空！',},\r\n                                {min: 4,message: '密码不低于四位',},\r\n                                {max: 12,message: '密码最长不高于十二位',},\r\n                                {pattern:/^[a-zA-Z0-9_]+$/,message: '密码必须是英文、数字或下划线组成',},\r\n                                ]}\r\n                            >\r\n                                <Input.Password />\r\n                            </Form.Item>\r\n\r\n\r\n\r\n                            <Form.Item\r\n                                wrapperCol={{\r\n                                offset: 10,\r\n                                span: 16,\r\n                                }}\r\n                            >\r\n                                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                                    登陆\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}