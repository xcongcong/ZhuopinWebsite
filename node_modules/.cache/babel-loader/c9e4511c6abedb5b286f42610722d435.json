{"ast":null,"code":"import \"antd/es/menu/style/css\";\nimport _Menu from \"antd/es/menu\";\nvar _jsxFileName = \"D:\\\\\\u524D\\u7AEF\\u9879\\u76EE\\\\\\u5C1A\\u9633\\u4E92\\u52A8\\u5B98\\u7F51\\\\official-website\\\\src\\\\components\\\\admin-left-nav\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport './index.css';\nimport LOGO from '../../images/LOGO2.png';\nimport { //antd引入\nHomeOutlined, AppstoreAddOutlined, UserOutlined, BarChartOutlined, SafetyOutlined, MailOutlined } from '@ant-design/icons';\nimport menuList from '../../config/menuConfig'; //引入动态显示菜单列表，根据数组显示结构\n\nimport { Link, withRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  SubMenu\n} = _Menu;\n\nclass Leftnav extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getMenuNodes = menuList => {\n      // 菜单数组生成对应的标签数组\n      const path = this.props.location.pathname;\n      return menuList.map(item => {\n        //item指数组中的每一个对象---------------------\n        if (!item.children) {\n          //如果没有子菜单就返回\n          return /*#__PURE__*/_jsxDEV(_Menu.Item, {\n            icon: item.icon,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: item.key,\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 29\n            }, this)\n          }, item.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 21\n          }, this);\n        } else {\n          //渲染子菜单\n          //默认打开当前的子选项\n          const cItem = item.children.find(cItem => cItem.key === path); //如果存在，说明当前item的子列表需要展开\n\n          this.openKey = item.key;\n          return /*#__PURE__*/_jsxDEV(SubMenu, {\n            icon: item.icon,\n            title: item.title,\n            children: this.getMenuNodes(item.children)\n          }, item.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this);\n        }\n      });\n    };\n  }\n\n  render() {\n    const menuNodes = this.getMenuNodes(menuList); //改变函数执行顺序\n    //得到当前请求的路径\n\n    const path = this.props.location.pathname; //得到需要打开的子菜单项\n\n    const openKey = this.openKey;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-nav\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-nav-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: LOGO,\n          alt: \"LOGO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u77E2\\u6613\\u79D1\\u6280\\u540E\\u53F0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(_Menu, {\n          SelectedKeys: [path] //指定默认选中打开\n          ,\n          defaultOpenKeys: ['/charts'] //指定默认选中打开\n          ,\n          mode: \"inline\",\n          theme: \"dark\",\n          children: menuNodes //调用动态生成菜单函数\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(Leftnav);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["D:/前端项目/尚阳互动官网/official-website/src/components/admin-left-nav/index.jsx"],"names":["React","Component","LOGO","HomeOutlined","AppstoreAddOutlined","UserOutlined","BarChartOutlined","SafetyOutlined","MailOutlined","menuList","Link","withRouter","SubMenu","Leftnav","getMenuNodes","path","props","location","pathname","map","item","children","icon","key","title","cItem","find","openKey","render","menuNodes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,SAAU;AACNC,YADJ,EAEIC,mBAFJ,EAGIC,YAHJ,EAIIC,gBAJJ,EAKIC,cALJ,EAMIC,YANJ,QAOW,mBAPX;AASA,OAAOC,QAAP,MAAqB,yBAArB,C,CAA+C;;AAC/C,SAAQC,IAAR,EAAaC,UAAb,QAA8B,kBAA9B;;AAEI,MAAM;AAAEC,EAAAA;AAAF,SAAN;;AAEJ,MAAMC,OAAN,SAAsBZ,SAAtB,CAAgC;AAAA;AAAA;;AAAA,SAC5Ba,YAD4B,GACdL,QAAD,IAAY;AAAE;AACvB,YAAMM,IAAI,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,QAAjC;AACA,aAAOT,QAAQ,CAACU,GAAT,CAAaC,IAAI,IAAG;AAAG;AAC1B,YAAG,CAACA,IAAI,CAACC,QAAT,EAAkB;AAAE;AAChB,8BACI,cAAM,IAAN;AAA0B,YAAA,IAAI,EAAED,IAAI,CAACE,IAArC;AAAA,mCACQ,QAAC,IAAD;AAAM,cAAA,EAAE,EAAEF,IAAI,CAACG,GAAf;AAAA,wBACKH,IAAI,CAACI;AADV;AAAA;AAAA;AAAA;AAAA;AADR,aAAgBJ,IAAI,CAACG,GAArB;AAAA;AAAA;AAAA;AAAA,kBADJ;AAOH,SARD,MAQK;AAAE;AAEH;AACA,gBAAME,KAAK,GAAGL,IAAI,CAACC,QAAL,CAAcK,IAAd,CAAmBD,KAAK,IAAIA,KAAK,CAACF,GAAN,KAAYR,IAAxC,CAAd,CAHC,CAID;;AACA,eAAKY,OAAL,GAAeP,IAAI,CAACG,GAApB;AAEA,8BACI,QAAC,OAAD;AAAwB,YAAA,IAAI,EAAEH,IAAI,CAACE,IAAnC;AAAyC,YAAA,KAAK,EAAEF,IAAI,CAACI,KAArD;AAAA,sBAGS,KAAKV,YAAL,CAAkBM,IAAI,CAACC,QAAvB;AAHT,aAAcD,IAAI,CAACG,GAAnB;AAAA;AAAA;AAAA;AAAA,kBADJ;AAOH;AACJ,OAxBM,CAAP;AAyBH,KA5B2B;AAAA;;AA6B5BK,EAAAA,MAAM,GAAG;AACL,UAAMC,SAAS,GAAG,KAAKf,YAAL,CAAkBL,QAAlB,CAAlB,CADK,CAC0C;AAC/C;;AACA,UAAMM,IAAI,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,QAAjC,CAHK,CAIL;;AACA,UAAMS,OAAO,GAAG,KAAKA,OAArB;AAGA,wBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACI;AAAK,UAAA,GAAG,EAAEzB,IAAV;AAAgB,UAAA,GAAG,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAA,+BAII;AACA,UAAA,YAAY,EAAE,CAACa,IAAD,CADd,CACsB;AADtB;AAEA,UAAA,eAAe,EAAE,CAAC,SAAD,CAFjB,CAE+B;AAF/B;AAGA,UAAA,IAAI,EAAC,QAHL;AAIA,UAAA,KAAK,EAAC,MAJN;AAAA,oBAQYc,SARZ,CAQsB;;AARtB;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA4DH;;AAjG2B;;AAmGhC,oBAAelB,UAAU,CAACE,OAAD,CAAzB","sourcesContent":["import React, { Component } from 'react'\r\nimport './index.css'\r\nimport LOGO from '../../images/LOGO2.png'\r\nimport { Menu,} from 'antd';\r\nimport {  //antd引入\r\n    HomeOutlined,\r\n    AppstoreAddOutlined,\r\n    UserOutlined,\r\n    BarChartOutlined,\r\n    SafetyOutlined,\r\n    MailOutlined,\r\n    } from '@ant-design/icons';\r\n\r\nimport menuList from '../../config/menuConfig' //引入动态显示菜单列表，根据数组显示结构\r\nimport {Link,withRouter} from 'react-router-dom'\r\n    \r\n    const { SubMenu } = Menu;\r\n\r\nclass Leftnav extends Component {\r\n    getMenuNodes=(menuList)=>{ // 菜单数组生成对应的标签数组\r\n        const path = this.props.location.pathname\r\n        return menuList.map(item =>{  //item指数组中的每一个对象---------------------\r\n            if(!item.children){ //如果没有子菜单就返回\r\n                return(\r\n                    <Menu.Item key={item.key} icon={item.icon}>\r\n                            <Link to={item.key}>\r\n                                {item.title}\r\n                            </Link>\r\n                    </Menu.Item>\r\n                )\r\n            }else{ //渲染子菜单\r\n\r\n                //默认打开当前的子选项\r\n                const cItem = item.children.find(cItem => cItem.key===path)\r\n                //如果存在，说明当前item的子列表需要展开\r\n                this.openKey = item.key\r\n\r\n                return(\r\n                    <SubMenu key={item.key} icon={item.icon} title={item.title}>\r\n                            {/* <Menu.Item key=\"5\">{<MailOutlined />} 品类管理</Menu.Item>\r\n                            <Menu.Item key=\"6\">{<MailOutlined />} 商品管理</Menu.Item> */}\r\n                            {this.getMenuNodes(item.children)}\r\n                    </SubMenu>\r\n                )\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const menuNodes = this.getMenuNodes(menuList)  //改变函数执行顺序\r\n        //得到当前请求的路径\r\n        const path = this.props.location.pathname\r\n        //得到需要打开的子菜单项\r\n        const openKey = this.openKey\r\n        \r\n\r\n        return (\r\n            <div className=\"left-nav\">\r\n                <div className=\"left-nav-header\">\r\n                    <img src={LOGO} alt=\"LOGO\" />\r\n                    <h1>矢易科技后台</h1>\r\n                </div>\r\n\r\n                <div >\r\n                    {/* <Button type=\"primary\" onClick={this.toggleCollapsed} style={{ marginBottom: 16 }}>\r\n                    {React.createElement(this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined)}\r\n                    </Button> */}\r\n                    <Menu\r\n                    SelectedKeys={[path]} //指定默认选中打开\r\n                    defaultOpenKeys={['/charts']}  //指定默认选中打开\r\n                    mode=\"inline\"\r\n                    theme=\"dark\"\r\n                    >       \r\n                    {/* 动态生成的菜单--------------------------------------------------------------- */}\r\n                            {\r\n                                menuNodes //调用动态生成菜单函数\r\n                            }\r\n                        {/* 下面是写死情况----------------------------------------------------- */}\r\n                        {/* <Menu.Item key=\"1\" icon={<HomeOutlined />}>\r\n                            <Link to='/admin/home'>\r\n                                首页\r\n                            </Link>\r\n                        </Menu.Item> */}\r\n\r\n                        {/* <SubMenu key=\"sub1\" icon={<AppstoreAddOutlined />} title=\"商品\">\r\n                            <Menu.Item key=\"5\">{<MailOutlined />} 品类管理</Menu.Item>\r\n                            <Menu.Item key=\"6\">{<MailOutlined />} 商品管理</Menu.Item>\r\n                        </SubMenu> */}\r\n\r\n                        {/* <Menu.Item key=\"2\" icon={<UserOutlined />}>\r\n                            <Link to='/admin/user'>\r\n                                用户管理\r\n                            </Link>\r\n                        </Menu.Item>\r\n\r\n                        <Menu.Item key=\"3\" icon={<SafetyOutlined />}>\r\n                            <Link to='/admin/role'>\r\n                                角色管理\r\n                            </Link>\r\n                        </Menu.Item>\r\n\r\n                        <SubMenu key=\"sub2\" icon={<BarChartOutlined />} title=\"数据可视化\">\r\n                            <Menu.Item key=\"9\">Option 9</Menu.Item>\r\n                            <Menu.Item key=\"10\">Option 10</Menu.Item>\r\n                            \r\n                            <SubMenu key=\"sub3\" title=\"Submenu\">\r\n                            <Menu.Item key=\"11\">Option 11</Menu.Item>\r\n                            <Menu.Item key=\"12\">Option 12</Menu.Item>\r\n                            </SubMenu>\r\n                        </SubMenu> */}\r\n                    </Menu>\r\n                </div>\r\n\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(Leftnav)\r\n"]},"metadata":{},"sourceType":"module"}